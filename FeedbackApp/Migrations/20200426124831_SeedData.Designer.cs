// <auto-generated />
using FeedbackApp.Domain;
using FeedbackApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FeedbackApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200426124831_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FeedbackApp.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            ImageUrl = "~/images/englishCourse.jpg",
                            LongDescription = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam in mi erat. Nam id dui vel felis imperdiet posuere.",
                            Price = 200.00m,
                            ShortDescription = "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
                            TeacherId = 1,
                            Title = "English Course"
                        },
                        new
                        {
                            CourseId = 2,
                            ImageUrl = "~/images/frenchCourse.jpg",
                            LongDescription = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam in mi erat. Nam id dui vel felis imperdiet posuere.",
                            Price = 250.00m,
                            ShortDescription = "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
                            TeacherId = 2,
                            Title = "French Course"
                        },
                        new
                        {
                            CourseId = 3,
                            ImageUrl = "~/images/italianCourse.jpg",
                            LongDescription = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam in mi erat. Nam id dui vel felis imperdiet posuere.",
                            Price = 250.00m,
                            ShortDescription = "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
                            TeacherId = 3,
                            Title = "Italian Course"
                        });
                });

            modelBuilder.Entity("FeedbackApp.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            Description = "Lorem ipsum",
                            FirstName = "Adriana",
                            LastName = "Radulescu"
                        },
                        new
                        {
                            TeacherId = 2,
                            Description = "Lorem ipsum",
                            FirstName = "Ioana",
                            LastName = "Popescu"
                        },
                        new
                        {
                            TeacherId = 3,
                            Description = "Lorem ipsum",
                            FirstName = "Georgiana",
                            LastName = "Timofte"
                        });
                });

            modelBuilder.Entity("FeedbackApp.Models.Course", b =>
                {
                    b.HasOne("FeedbackApp.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
